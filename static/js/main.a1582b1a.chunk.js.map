{"version":3,"sources":["containers/inputform/pizza.svg","containers/inputform/soup.svg","containers/inputform/sandwich.svg","components/submit/submit.js","containers/inputform/InputForm.js","components/background/Background.js","App.js","reportWebVitals.js","redux.js","index.js"],"names":["submit","values","jsonData","JSON","stringify","console","log","axios","post","headers","then","response","document","querySelector","classList","add","setTimeout","window","location","reload","catch","error","SubmissionError","data","inputForm","props","option","pristine","submitting","handleSubmit","renderField","input","name","type","placeholder","required","step","onInput","min","max","id","parse","defaultValue","meta","touched","Fragment","className","onSubmit","Field","component","htmlFor","src","pizzaImg","alt","value","soupImg","sandwichImg","parseInt","parseFloat","e","target","nextSibling","textContent","disabled","reduxForm","form","selector","formValueSelector","connect","state","plate","version","xmlns","x","y","viewBox","enableBackground","cx","cy","rx","ry","d","App","Background","InputForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","formReducer","reducer","combineReducers","store","createStore","ReactDOM","render","getElementById"],"mappings":"mMAAe,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,qC,iCC0B1BA,MArBf,SAAgBC,GACd,IAAMC,EAAWC,KAAKC,UAAUH,GAGhC,OADAI,QAAQC,IAAIJ,GACLK,IACJC,KAAK,qDAAsDN,EAAU,CACpEO,QAAS,CACP,eAAgB,sBAGnBC,MAAK,SAACC,GACHC,SAASC,cAAc,iBAAiBC,UAAUC,IAAI,UACtDC,WAAWC,OAAOC,SAASC,QAAO,GAAO,QAE5CC,OAAM,SAACC,GACN,MAAM,IAAIC,IAAJ,eACDD,EAAMV,SAASY,W,OCVtBC,EAAY,SAACC,GACf,IAAKC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,SAAUC,EAA4BH,EAA5BG,WAAYC,EAAgBJ,EAAhBI,aAG7BC,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,KACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,YACAC,EALkB,EAKlBA,SACAC,EANkB,EAMlBA,KACAC,EAPkB,EAOlBA,QACAC,EARkB,EAQlBA,IACAC,EATkB,EASlBA,IACAC,EAVkB,EAUlBA,GACAC,EAXkB,EAWlBA,MACAC,EAZkB,EAYlBA,aAZkB,IAalBC,KAAgBC,GAbE,EAaV5C,OAbU,EAaF4C,SAASvB,EAbP,EAaOA,MAbP,OAed,eAAC,IAAMwB,SAAP,WACA,iDAAWd,GAAX,IAAkBE,KAAMA,EAAMC,YAAaA,EAAaF,KAAMA,EAAMI,KAAMA,EAAMK,MAAOA,EAAON,SAAUA,EAAUO,aAAgBA,EAAcL,QAASA,EAASC,IAAKA,EAAKC,IAAKA,EAAKC,GAAIA,KACzLI,GAAWvB,GAAS,sBAAMyB,UAAU,QAAhB,SAAyBzB,QAIpD,OACE,uBAAMyB,UAAU,YAAYC,SAAUlB,EAAa7B,GAAnD,UACE,sBAAK8C,UAAU,oBAAf,UACE,wBAAOA,UAAU,kBAAjB,UACE,2CACA,cAACE,EAAA,EAAD,CACEhB,KAAK,OACLiB,UAAWnB,EACXG,KAAK,OACLC,YAAY,kBACZC,UAAU,OAId,wBAAOW,UAAU,kBAAjB,UACE,kDACA,cAACE,EAAA,EAAD,CACEhB,KAAK,mBACLC,KAAK,OACLC,YAAY,WACZE,KAAK,IACLD,UAAU,EACVc,UAAWnB,OAGf,sBAAKgB,UAAU,kBAAf,UACE,8CACA,sBAAKA,UAAU,2BAAf,UACE,wBAAOI,QAAQ,QAAf,UACE,qBAAKC,IAAKC,EAAUC,IAAI,UACxB,uCACA,cAACL,EAAA,EAAD,CACEhB,KAAK,OACLQ,GAAG,QACHP,KAAK,QACLqB,MAAM,QACNnB,UAAU,EACVc,UAAWnB,OAGf,wBAAOoB,QAAQ,OAAf,UACE,qBAAKC,IAAKI,EAASF,IAAI,UAEvB,sCACA,cAACL,EAAA,EAAD,CACEhB,KAAK,OACLQ,GAAG,OACHP,KAAK,QACLqB,MAAM,OACNnB,UAAU,EACVc,UAAWnB,OAGf,wBAAOoB,QAAQ,WAAf,UACE,qBAAKC,IAAKK,EAAaH,IAAI,aAC3B,0CACA,cAACL,EAAA,EAAD,CACEhB,KAAK,OACLQ,GAAG,WACHP,KAAK,QACLqB,MAAM,WACNnB,UAAU,EACVc,UAAWnB,UAKL,UAAXJ,GACC,eAAC,IAAMmB,SAAP,WACE,kCACE,kDACA,cAACG,EAAA,EAAD,CAAOhB,KAAK,eAAgBiB,UAAWnB,EAAaW,MAAO,SAAAa,GAAK,OAAIG,SAASH,IAAQrB,KAAK,SAASK,IAAI,IAAIC,IAAI,KAAKH,KAAK,IAAIF,YAAY,oCAE3I,kCACE,gEACA,cAACc,EAAA,EAAD,CAAOhB,KAAK,WAAYiB,UAAWnB,EAAaW,MAAO,SAAAa,GAAK,OAAII,WAAWJ,IAAUrB,KAAK,SAASG,KAAK,OAAOE,IAAI,OAAOJ,YAAY,gCAIhI,aAAXR,GACC,cAAC,IAAMmB,SAAP,UACE,kCACE,iDACA,cAACG,EAAA,EAAD,CAAOhB,KAAK,kBAAmBiB,UAAWnB,EAAaW,MAAO,SAAAa,GAAK,OAAIG,SAASH,IAASrB,KAAK,SAASK,IAAI,IAAIF,KAAK,IAAIF,YAAY,sCAI9H,SAAXR,GACC,cAAC,IAAMmB,SAAP,UACE,kCACE,2CACA,cAACG,EAAA,EAAD,CAAOhB,KAAK,kBAAmBiB,UAAWnB,EAAaW,MAAO,SAAAa,GAAK,OAAIG,SAASH,IAAQd,GAAG,SAASP,KAAK,QAAQqB,MAAM,IAAIhB,IAAI,IAAIC,IAAI,KAAKH,KAAK,IAAIC,QAAS,SAACsB,GAAD,OAAOA,EAAEC,OAAOC,YAAYC,YAAcH,EAAEC,OAAON,SACjN,2CAKR,wBAAQP,SAAUlB,EAAcI,KAAK,SAAS8B,SAAUpC,GAAYC,EAApE,uBAEF,qBAAKkB,UAAU,eAAf,SAA8B,mEASpCtB,EAAYwC,YAAU,CACpBC,KAAM,SACNjE,UAFUgE,CAGTxC,GAIH,IAAM0C,EAAWC,YAAkB,UAYpB3C,EAXfA,EAAY4C,aAAQ,SAACC,GAKnB,MAAO,CACL3C,OAHawC,EAASG,EAAO,WAHrBD,CAST5C,GCtJH,IAAM8C,EACJ,qBACEC,QAAQ,MACR/B,GAAG,YACHgC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,mBAPnB,SAUE,8BACE,yBAAS9B,UAAU,MAAM+B,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAAQC,GAAG,UACzD,yBAASlC,UAAU,MAAM+B,GAAG,MAAMC,GAAG,QAAQC,GAAG,QAAQC,GAAG,UAC3D,yBAASlC,UAAU,MAAM+B,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAAQC,GAAG,UACzD,yBAASlC,UAAU,MAAM+B,GAAG,MAAMC,GAAG,QAAQC,GAAG,OAAOC,GAAG,SAC1D,sBACElC,UAAU,MACVmC,EAAE,gEAEJ,sBACEnC,UAAU,MACVmC,EAAE,wMAGJ,sBACEnC,UAAU,MACVmC,EAAE,yJAGJ,sBACEnC,UAAU,MACVmC,EAAE,mQAIJ,sBACEnC,UAAU,MACVmC,EAAE,yJAGJ,sBACEnC,UAAU,MACVmC,EAAE,+EAKKC,EAzDf,WACE,OACE,sBAAKpC,UAAU,kBAAf,UACE,iDACCwB,MCSQY,MAVf,WAEE,OACE,sBAAKpC,UAAU,MAAf,UACE,cAACqC,EAAD,IACA,cAACC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCJRO,EAAW,CACf5B,K,OAAM6B,GAEFC,EAAUC,YAAgBH,GAGjBI,EAFDC,YAAYH,GCG1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFrF,SAASyF,eAAe,SAG1BhB,K","file":"static/js/main.a1582b1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza.0b5667a2.svg\";","export default __webpack_public_path__ + \"static/media/soup.d5e69f8a.svg\";","export default __webpack_public_path__ + \"static/media/sandwich.a2ac82ac.svg\";","import { SubmissionError } from \"redux-form\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction submit(values) {\r\n  const jsonData = JSON.stringify(values);\r\n\r\n  console.log(jsonData);\r\n  return axios\r\n    .post(\"https://frosty-wood-6558.getsandbox.com:443/dishes\", jsonData, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then((response) => {\r\n        document.querySelector(\".confirmation\").classList.add(\"active\");\r\n        setTimeout(window.location.reload(true), 5000) \r\n    })\r\n    .catch((error) => {\r\n      throw new SubmissionError({\r\n        ...error.response.data,\r\n      });\r\n    });\r\n}\r\n\r\nexport default submit;\r\n","import React from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport pizzaImg from \"./pizza.svg\";\r\nimport soupImg from \"./soup.svg\";\r\nimport sandwichImg from \"./sandwich.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport submit from '../../components/submit/submit'\r\n\r\n\r\n\r\n\r\nlet inputForm = (props) => {\r\n  let {option, pristine, submitting, handleSubmit} = props;\r\n\r\n\r\n  const renderField = ({\r\n    input,\r\n    name,\r\n    type,\r\n    placeholder,\r\n    required,\r\n    step,\r\n    onInput,\r\n    min,\r\n    max,\r\n    id,\r\n    parse,\r\n    defaultValue,\r\n    meta: { submit, touched, error }\r\n  }) => (\r\n        <React.Fragment>\r\n        <input {...input} type={type} placeholder={placeholder} name={name} step={step} parse={parse} required={required} defaultValue = {defaultValue} onInput={onInput} min={min} max={max} id={id}/>\r\n        {touched && error && <span className=\"error\">{error}</span>}\r\n        </React.Fragment>\r\n  )\r\n  \r\n  return (\r\n    <form className=\"app__form\" onSubmit={handleSubmit(submit)}>\r\n      <div className=\"app__form__scroll\">\r\n        <label className=\"app__form__dish\">\r\n          <h3>Dish name</h3>\r\n          <Field\r\n            name=\"name\"\r\n            component={renderField}\r\n            type=\"text\"\r\n            placeholder=\"Enter dish name\"\r\n            required={true}\r\n            \r\n          />\r\n        </label>\r\n        <label className=\"app__form__time\">\r\n          <h3>Preparation time</h3>\r\n          <Field\r\n            name=\"preparation_time\"\r\n            type=\"time\"\r\n            placeholder=\"00:00:00\"\r\n            step=\"1\"\r\n            required={true}\r\n            component={renderField}\r\n          />\r\n        </label>\r\n        <div className=\"app__form__type\">\r\n          <h3>Type of dish</h3>\r\n          <div className=\"app__form__type__options\">\r\n            <label htmlFor=\"pizza\">\r\n              <img src={pizzaImg} alt=\"pizza\" />\r\n              <h2>Pizza</h2>\r\n              <Field\r\n                name=\"type\"\r\n                id=\"pizza\"\r\n                type=\"radio\"\r\n                value=\"pizza\"\r\n                required={true}\r\n                component={renderField}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"soup\">\r\n              <img src={soupImg} alt=\"pizza\" />\r\n\r\n              <h2>Soup</h2>\r\n              <Field\r\n                name=\"type\"\r\n                id=\"soup\"\r\n                type=\"radio\"\r\n                value=\"soup\"\r\n                required={true}\r\n                component={renderField}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"sandwich\">\r\n              <img src={sandwichImg} alt=\"sandwich\" />\r\n              <h2>Sandwich</h2>\r\n              <Field\r\n                name=\"type\"\r\n                id=\"sandwich\"\r\n                type=\"radio\"\r\n                value=\"sandwich\"\r\n                required={true}\r\n                component={renderField}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          {option === \"pizza\" && (\r\n            <React.Fragment>\r\n              <label>\r\n                <h3>Number of slices</h3>\r\n                <Field name=\"no_of_slices\"  component={renderField} parse={value => parseInt(value)} type=\"number\" min=\"1\" max=\"36\" step=\"1\" placeholder=\"Enter number of pizza slices\"/>\r\n              </label>\r\n              <label>\r\n                <h3>Diameter length in centimeters</h3>\r\n                <Field name=\"diameter\"  component={renderField} parse={value => parseFloat(value)}   type=\"number\" step=\"0.01\" min=\"0.00\" placeholder=\"Enter diameter length\"/>\r\n              </label>\r\n            </React.Fragment>\r\n          )}\r\n          {option === \"sandwich\" && (\r\n            <React.Fragment>\r\n              <label>\r\n                <h3>Slices of bread</h3>\r\n                <Field name=\"slices_of_bread\"  component={renderField} parse={value => parseInt(value)}  type=\"number\" min=\"1\" step=\"1\" placeholder=\"Enter number of bread slices\"/>\r\n              </label>          \r\n            </React.Fragment>\r\n          )}\r\n          {option === \"soup\" && (\r\n            <React.Fragment>\r\n              <label>\r\n                <h3>Spiciness</h3>\r\n                <Field name=\"spiciness_scale\"  component={renderField} parse={value => parseInt(value)} id=\"slider\" type=\"range\" value=\"6\" min=\"1\" max=\"10\" step=\"1\" onInput={(e) => e.target.nextSibling.textContent = e.target.value}/>\r\n                <h4>6</h4>\r\n              </label>          \r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <button onSubmit={handleSubmit} type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n      </div>\r\n      <div className=\"confirmation\"><h2>Dish was successfully added</h2></div>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\n\r\n  \r\n\r\ninputForm = reduxForm({\r\n  form: \"dishes\", // a unique identifier for this form,\r\n  submit\r\n})(inputForm);\r\n\r\n\r\n\r\nconst selector = formValueSelector(\"dishes\"); // <-- same as form name\r\ninputForm = connect((state) => {\r\n\r\n\r\n  const option = selector(state, \"type\");\r\n\r\n  return {\r\n    option\r\n    \r\n  };\r\n})(inputForm);\r\n\r\nexport default inputForm;\r\n","import React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app__background\">\r\n      <h1>Adding new dish</h1>\r\n      {plate}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst plate = (\r\n  <svg\r\n    version=\"1.1\"\r\n    id=\"Warstwa_1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 380 380\"\r\n    enableBackground=\"new 0 0 380 380;\"\r\n  >\r\n\r\n    <g>\r\n      <ellipse className=\"st0\" cx=\"190\" cy=\"190\" rx=\"183.2\" ry=\"183.6\" />\r\n      <ellipse className=\"st0\" cx=\"190\" cy=\"191.5\" rx=\"161.3\" ry=\"161.7\" />\r\n      <ellipse className=\"st1\" cx=\"190\" cy=\"190\" rx=\"161.3\" ry=\"161.7\" />\r\n      <ellipse className=\"st0\" cx=\"195\" cy=\"184.3\" rx=\"64.5\" ry=\"64.7\" />\r\n      <path\r\n        className=\"st0\"\r\n        d=\"M195,249c-35.6,0-64.5-29-64.5-64.7s28.9-64.7,64.5-64.7V249z\"\r\n      />\r\n      <path\r\n        className=\"st2\"\r\n        d=\"M195,232.1c-26.2,0-47.7-21.6-47.7-47.8s21.5-47.8,47.7-47.8s47.7,21.6,47.7,47.8S221.3,232.1,195,232.1z\r\n  M195,143.2c-22.5,0-41,18.5-41,41.1s18.5,41.1,41,41.1s41-18.5,41-41.1S217.6,143.2,195,143.2z\"\r\n      />\r\n      <path\r\n        className=\"st3\"\r\n        d=\"M111.4,244.6L111.4,244.6c-4,0-6.7-8.4-6-17.5l3.7-55.2c0-1.3,1.3-2.7,2.7-2.7l0,0c1.3,0,2.7,1,2.7,2.7\r\n l3.7,55.2C118.1,236.2,115.4,244.6,111.4,244.6z\"\r\n      />\r\n      <path\r\n        className=\"st0\"\r\n        d=\"M125.1,132.1c0-1-0.7-2-2-2c-1,0-2,0.7-2,2v30.6h-3.7v-30.6c0-1-0.7-2-2-2c-1,0-2,0.7-2,2v30.6h-4v-30.6\r\n c0-1-0.7-2-2-2c-1,0-2,0.7-2,2v30.6h-3.7v-30.6c0-1-0.7-2-2-2c-1,0-2,0.7-2,2v30.6v1.7v5.4c0,7.7,6,13.8,13.8,13.8\r\n c7.4,0,13.8-6.1,13.8-13.8L125.1,132.1z\"\r\n      />\r\n      <path\r\n        className=\"st3\"\r\n        d=\"M276.4,244.6L276.4,244.6c-4,0-6.7-8.4-6-17.5l3.7-55.2c0-1.3,1.3-2.7,2.7-2.7l0,0c1.3,0,2.7,1,2.7,2.7\r\n l3.7,55.2C282.8,236.2,280.1,244.6,276.4,244.6z\"\r\n      />\r\n      <path\r\n        className=\"st0\"\r\n        d=\"M280.4,186.3c-5,0-15.5-13.1-15.5-29.3s9.1-29.3,14.5-29.3L280.4,186.3z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\nexport default App;\r\n","import \"./App.css\";\nimport InputForm from \"./containers/inputform/InputForm\";\nimport Background from \"./components/background/Background\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Background />\n      <InputForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst reducers = {\r\n  form: formReducer\r\n}\r\nconst reducer = combineReducers(reducers)\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}